{"version":3,"sources":["Model.js","Overlay.js","App.js","index.js"],"names":["Model","scroll","props","raycaster","group","useRef","t","useGLTF","nodes","materials","animations","useAnimations","actions","mixer","useState","hovered","setHovered","useEffect","document","body","style","cursor","current","getObjectByName","children","material","color","set","play","clampWhenFinished","useFrame","state","et","clock","elapsedTime","scale","x","Math","sin","z","THREE","lerp","_clip","duration","setTime","forEach","child","index","rotation","y","cos","ref","dispose","name","position","PerspectiveCamera","makeDefault","far","near","fov","PI","geometry","Mesh002","Mesh002_1","coin003","coin003_1","coin003_2","coin003_3","lowpolyPeopleSportsMan05002","lowpolyPeopleSportsMan05002_1","lowpolyPeopleSportsMan05002_2","lowpolyPeopleSportsMan05002_3","onClick","window","open","onPointerOver","e","stopPropagation","onPointerOut","Text004","Text004_1","Text","Text005","Text005_1","Text005_2","Text005_3","Text005_4","Text005_5","Text005_6","coin004","coin004_1","coin004_2","coin004_3","preload","Overlay","forwardRef","caption","text","setText","copy","setCopy","scrollBut","left","innerWidth","bottom","setTimeout","display","innerHeight","onScroll","target","scrollTop","scrollHeight","className","height","onMouseDown","onMouseUp","navigator","clipboard","writeText","id","App","overlay","shadows","onCreated","events","connect","intensity","fallback","computeOffsets","offsetX","clientX","offsetY","clientY","Environment","preset","Loader","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2c37a9fc.chunk.js","sourcesContent":["/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\nimport * as THREE from \"three\"\nimport React, { useRef, useEffect, useState } from 'react'\nimport { useGLTF, PerspectiveCamera, useAnimations } from '@react-three/drei'\nimport { useFrame } from \"@react-three/fiber\"\n// import { Raycaster } from \"three\"\nexport default function Model({ scroll, raycaster, ...props }) {\n    const group = useRef()\n    const t = useRef(0)\n    const { nodes, materials, animations } = useGLTF('/map.glb')\n    const { actions, mixer } = useAnimations(animations, group)\n    const [hovered, setHovered] = useState(false)\n    useEffect(() => {\n        // if (hovered) group.current.getObjectByName(hovered).material.color.set(\"white\")\n        document.body.style.cursor = hovered ? \"pointer\" : \"auto\"\n        if (hovered) {\n            group.current.getObjectByName('button').children[1].material.color.set('white')\n        }\n        else {\n            group.current.getObjectByName('button').children[1].material.color.set('#8BB8C2')\n        }\n\n\n    }, [hovered])\n    useEffect(() => {\n        void actions[\"CameraAction.018\"].play()\n        actions.clampWhenFinished = true;\n    }, [])\n    const onHover = (e) => {\n        e.stopPropagation()\n        setHovered(true)\n    }\n    const unHover = (e) => {\n        e.stopPropagation()\n        setHovered(null)\n    }\n    useFrame((state) => {\n        const et = state.clock.elapsedTime\n\n        group.current.children[4].scale.x = (0.1 * Math.sin(et) + 1) / 80\n        group.current.children[4].scale.z = (0.1 * Math.sin(et) + 1) / 80\n\n        t.current = THREE.MathUtils.lerp(t.current, actions[\"CameraAction.018\"]._clip.duration * scroll.current, 0.05)\n        if (t.current >= 50) {\n            mixer.setTime(20.958)\n        }\n        else if (t.current <= 0) {\n            mixer.setTime(0)\n        }\n        else {\n            mixer.setTime(t.current)\n        }\n        // console.log(t.current);\n\n        group.current.children[0].children.forEach((child, index) => {\n            // child.material.color.lerp(color.set(hovered === child.name ? \"tomato\" : \"#202020\").convertSRGBToLinear(), hovered ? 0.1 : 0.05)\n\n            // child.position.y = Math.sin((et + index * 2000) / 2) / 10\n            child.rotation.x = Math.sin((et + index * 2000) / 3) / 100\n            child.rotation.y = Math.cos((et + index * 2000) / 2) / 100\n            child.rotation.z = Math.sin((et + index * 2000) / 3) / 100\n            // console.log(child);\n\n\n        })\n    })\n    return (\n        <group ref={group} {...props} dispose={null}>\n            <group\n                name=\"Camera\"\n                position={[-29.6056, 23.9947, 18.1117]}\n                rotation={[1.4982, -0.0364, -0.0843]}>\n                <group\n                    name=\"Camera_Orientation\"\n                    position={[0, 1.1153, 0]}\n                    rotation={[-0.0103, -0.001, 0.0024]}>\n                    <PerspectiveCamera\n                        makeDefault\n                        far={1000}\n                        near={0.1}\n                        fov={47.5974}\n                        rotation={[-Math.PI / 2, 0, 0]}\n                    />\n                </group>\n            </group>\n            <group\n                name=\"Statue_of_Liberty\"\n                position={[25.384, 7.4225, 8.6914]}\n                rotation={[Math.PI / 2, 0, 0]}\n                scale={[0.0639, 0.0639, 0.0639]}>\n                <group name=\"Statue\" position={[1.5167, 1.7089, 118.0964]} scale={[0.5566, 0.5566, 0.5566]}>\n                    <mesh geometry={nodes.Mesh002.geometry} material={materials['Mat.004']} />\n                    <mesh geometry={nodes.Mesh002_1.geometry} material={materials['Mat.006']} />\n                </group>\n            </group>\n            <group\n                name=\"drug\"\n                position={[-7.2836, 2.946, 9.2494]}\n                rotation={[-1.8758, 0.0508, -0.1994]}\n                scale={[-0.489, 0.246, -0.489]}>\n                <mesh geometry={nodes.coin003.geometry} material={materials['white.005']} />\n                <mesh geometry={nodes.coin003_1.geometry} material={materials['white.006']} />\n                <mesh geometry={nodes.coin003_2.geometry} material={materials['blue.002']} />\n                <mesh geometry={nodes.coin003_3.geometry} material={materials['Material.025']} />\n            </group>\n            <group\n                name=\"basketball\"\n                position={[-28.5501, 21.0682, 11.2462]}\n                rotation={[Math.PI / 2, 0, 0]}\n                scale={[0.0373, 0.0373, 0.0373]}>\n                <mesh\n                    geometry={nodes.lowpolyPeopleSportsMan05002.geometry}\n                    material={materials['Default OBJ.003']}\n                />\n                <mesh\n                    geometry={nodes.lowpolyPeopleSportsMan05002_1.geometry}\n                    material={materials['Material.026']}\n                />\n                <mesh\n                    geometry={nodes.lowpolyPeopleSportsMan05002_2.geometry}\n                    material={materials['Material.027']}\n                />\n                <mesh\n                    geometry={nodes.lowpolyPeopleSportsMan05002_3.geometry}\n                    material={materials['Material.028']}\n                />\n            </group>\n            <group\n                name=\"button\"\n                onClick={() => window.open(\"mailto:\" + 'chrischen@mail.com' + '?subject=' + `Let's come out for a cup of coffee!` + '&body=' + 'Hey Chris!')}\n                onPointerOver={onHover}\n                onPointerOut={unHover}\n                position={[26.3158, 3.7881, 8.8025]}\n                rotation={[1.3527, -0.642, 0.5148]}\n                scale={[0.0155, 0.0155, 0.0155]}>\n                <mesh geometry={nodes.Text004.geometry} material={materials['Material.030']} />\n                <mesh geometry={nodes.Text004_1.geometry} material={materials['Material.031']} />\n            </group>\n            <mesh\n                name=\"Text\"\n                geometry={nodes.Text.geometry}\n                material={materials['Material.029']}\n                position={[26.055, 3.9351, 8.91]}\n                rotation={[1.5404, -0.5187, 0.6869]}\n                scale={[0.0736, 0.0736, 0.0736]}\n            />\n            <group\n                position={[26.3063, 3.8337, 8.7666]}\n                rotation={[1.3527, -0.642, 0.5148]}\n                scale={[0.008, 0.008, 0.008]}>\n                <mesh geometry={nodes.Text005.geometry} material={materials['Material.032']} />\n                <mesh geometry={nodes.Text005_1.geometry} material={materials['Material.033']} />\n                <mesh geometry={nodes.Text005_2.geometry} material={materials['Material.034']} />\n                <mesh geometry={nodes.Text005_3.geometry} material={materials['Material.035']} />\n                <mesh geometry={nodes.Text005_4.geometry} material={materials['Material.036']} />\n                <mesh geometry={nodes.Text005_5.geometry} material={materials['Material.037']} />\n                <mesh geometry={nodes.Text005_6.geometry} material={materials['Material.038']} />\n            </group>\n            <group\n                position={[8.0889, 2.6516, 8.4098]}\n                rotation={[-1.8758, 0.0508, -0.1994]}\n                scale={[-0.6485, 0.3262, -0.6485]}>\n                <mesh geometry={nodes.coin004.geometry} material={materials['gold.003']} />\n                <mesh geometry={nodes.coin004_1.geometry} material={materials['green.002']} />\n                <mesh geometry={nodes.coin004_2.geometry} material={materials['green_dark.002']} />\n                <mesh geometry={nodes.coin004_3.geometry} material={materials['white.007']} />\n            </group>\n        </group>\n    )\n}\n\nuseGLTF.preload('/map.glb')\n","import React, { forwardRef, useState, useEffect, useRef } from \"react\"\n\nconst Overlay = forwardRef(({ caption, scroll }, ref) => {\n\n  const [text, setText] = useState('E-mail Me')\n  const [copy, setCopy] = useState(false)\n  const scrollBut = useRef()\n  useEffect(() => {\n    if (scrollBut) {\n      scrollBut.current.style.left = `${window.innerWidth / 2}px`\n      scrollBut.current.style.bottom = `${-200}px`\n      setTimeout(() => {\n        scrollBut.current.style.display = 'none'\n      }, 3900);\n    }\n  }, [window.innerWidth, window.innerHeight])\n  return (\n    <div\n      ref={ref}\n      onScroll={(e) => {\n        scroll.current = e.target.scrollTop / (e.target.scrollHeight - window.innerHeight)\n\n      }}\n      className=\"scroll\">\n      <div style={{ height: \"170vh\" }}>\n        <div className=\"dot\">\n          <h1>Hey There!</h1>\n          <br /><br />\n       My name is <span>Chris Chen</span>. I like Basketball and Apple, but more importantly, I build things for the web\n       <br /><br />\n       Here are a few technologies I've been working with recently:\n       <br /><br />\n          <ul>\n            <li>JavaScript (ES6+)</li>\n            <li>React</li>\n            <li>Three.js</li>\n            <li>React-three-fiber</li>\n            <li>Blender</li>\n          </ul>\n          <br />\n          <br />\n          <span className='contact'\n            onPointerOver={() => setText('Click to Copy')}\n            onPointerOut={() => { copy ? setText('E-mail Copied!') : setText('E-mail Me') }}\n            onMouseDown={() => setText('chrischen@mail.com')}\n            onMouseUp={() => {\n              navigator.clipboard.writeText('chrischen@mail.com')\n              setText('E-mail Copied!')\n              setCopy(true)\n\n            }}\n          >\n            {text}\n            {/* <a className=\"contact\" href=\"/resume.pdf\" target=\"blank\" rel=\"noopener noreferrer\">\n            Resume\n          </a> */}\n          </span>\n          <section id=\"section05\" ref={scrollBut}>\n\n\n          </section>\n\n        </div>\n      </div>\n      <div style={{ height: \"250vh\" }}>\n        <div className=\"dot\">\n          <h1>Doctor</h1>\n          <br /><br />\n       Being a boy in an asian household, becoming a doctor seemed like one of the few career paths that doesn't lead to parents' \"disappointment\"\n       <br /><br />\n\n       I worked hard and got really good grades in my IB exams and got into med school at <span>University of Melbourne</span>\n          <br /><br />\n       However, it did not take too many lab rats to make me realised that being a doctor might not be an option for me due to my hemophobia\n      </div>\n      </div>\n      <div style={{ height: \"200vh\" }}>\n        <div className=\"dot\">\n          <h1>Biochemical Engineering</h1>\n          <br /><br />\n        While I was hesitating, I got an offer from the other side of the globe -- <span>University College London (UCL) </span>studying Biochemical Engineering\n        <br /><br />\n\n        It did not take me long to make the decision because I did not want to waste the opportunity to see the other side of the world and most importantly, the name sounded much less 'bloody'\n      </div>\n      </div>\n      <div style={{ height: \"250vh\" }}>\n        <div className=\"dot gold\">\n          <h1>Private Equity</h1>\n          <br /><br />\n    Most of my London hall mates come from Finance background. Under the influence, I started to be interested in investing. In summer 2019, I got an internship opportunity at a private equity firm as an <span>Analyst</span>\n        </div>\n      </div>\n      <div style={{ height: \"200vh\" }}>\n        <div className=\"dot\">\n          <h1>MBA</h1>\n          <br /><br />\n        Upon graduation, I wanted to further my study in business side of the story. Combining with my technical Know-How from my undergraduate study, I will be an ideal candidate for pharmaceutical investment/consulting companies\n        <br /><br />\nI leveraged my undergraduate First Class Honor degree into <span>London School of Economics and Political Science (LSE) & Yale University MBA program</span>\n        </div>\n      </div>\n      <div style={{ height: \"250vh\" }}>\n        <div className=\"dot \">\n          <h1 className=\"why\">\n            BUT WHY\n          </h1>\n        </div>\n      </div>\n\n      <div style={{ height: \"250vh\" }}>\n        <div className=\"dot \">\n          <h1 className=\"why\">\n            DO ALL OF THESE\n          </h1>\n        </div>\n      </div>\n      <div style={{ height: \"250vh\" }}>\n        <div className=\"dot \">\n          <h1 className=\"why\">\n            HAVE TO DO WITH THE\n          </h1>\n        </div>\n      </div>\n      <div style={{ height: \"250vh\" }}>\n        <div className=\"dot \">\n          <h1 className=\"why\">\n\n          </h1>\n        </div>\n      </div>\n      <div style={{ height: \"100vh\" }}>\n        <div className=\"dot\">\n\n        </div>\n      </div>\n\n    </div>\n  )\n})\n\nexport default Overlay\n","import React, { Suspense, useRef } from \"react\"\nimport { Canvas } from \"@react-three/fiber\"\nimport { Environment, Loader } from \"@react-three/drei\"\nimport Model from \"./Model\"\nimport Overlay from \"./Overlay\"\n\n\nexport default function App() {\n  const overlay = useRef()\n  const caption = useRef()\n  const scroll = useRef(0)\n\n\n\n  return (\n    <>\n      <Canvas\n        shadows\n        onCreated={(state) => state.events.connect(overlay.current)}>\n        <ambientLight intensity={0.4} />\n        <Suspense fallback={null}>\n          <Model scroll={scroll}\n            raycaster={{ computeOffsets: ({ clientX, clientY }) => ({ offsetX: clientX, offsetY: clientY }) }}\n          />\n          <Environment preset=\"city\" />\n        </Suspense>\n      </Canvas>\n      <Loader />\n      <Overlay ref={overlay} caption={caption} scroll={scroll} />\n    </>\n  )\n}\n","import ReactDOM from \"react-dom\"\nimport React from \"react\"\nimport \"./styles.css\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}